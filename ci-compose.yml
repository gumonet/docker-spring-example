version: "3.7"

volumes: #definimos los volumenes del sistema (son como discos duros virtuales)
    gradle_user_home:    

services: #service = Container
    test:
        image: docker.pkg.github.com/gumonet/docker-spring-example/spring-demo:testing
        build:
            context: .
            target: testing
        depends_on:  #Se especifican los servicios que necesitamos levantar antes de este
            - postgres
        environment: 
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/demo_development
            SPRING_DATASOURCE_USERNAME: postgres
            SPRING_DATASOURCE_PASSWORD: 123456789

    # Solo compilamos la imagen ya que vamos a contruir el release para que genere el war que se irá a producción
    # a partir de aqui ya no ocupamos posgres por que ya no generamos pruebas la base de datos ya debe estar en producción
    builder:  
        image: docker.pkg.github.com/gumonet/docker-spring-example/spring-demo:builder
        build:
            context: .
            target: builder
    
    release: #Se genera el release 
        image: docker.pkg.github.com/gumonet/docker-spring-example/spring-demo:builder
        build:
            context: .
            target: release